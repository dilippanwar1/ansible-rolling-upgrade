---

- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
     - group_vars/all.yml

  pre_tasks:

    - include_vars:
        file: openstack/keystonerc_production.yaml
      when: target == 'production'

    - include_vars:
        file: openstack/keystonerc_staging.yaml
      when: target == 'staging'

    - name: authenticate to cloud
      os_auth:
      environment: "{{ openstack_environment }}"

  tasks:

  - name: create networks
    os_network:
      name: "{{ item }}"
      state: present
    environment: "{{ openstack_environment }}"
    with_items:
      - database
      - web

  - name: create subnets
    os_subnet:
      name: "{{ item.subnet }}"
      network_name: "{{ item.network }}"
      dns_nameservers: "{{ item.dns }}"
      cidr: "{{ item.cidr }}"
      state: present
    environment: "{{ openstack_environment }}"
    with_items:
      - { network: database, subnet: database-subnet, cidr: 172.16.0.0/16, dns: 192.168.26.1 }
      - { network: web, subnet: web-subnet, cidr: 172.17.0.0/16, dns: 192.168.26.1 }

  - name: create router
    os_router:
      name: router
      network: "{{ uplink_name }}"
      interfaces:
        - database-subnet
        - web-subnet
      state: present
    environment: "{{ openstack_environment }}"

  - name: create database server
    os_server:
      name: "postgresql-{{ target }}"
      key_name: demo
      image: rhel-7.3-53-minimal
      flavor: m1.small
      boot_from_volume: yes
      terminate_volume: yes
      volume_size: 10
      floating_ip_pools: external-net
      delete_fip: yes
      network: database
      security_groups:
        - ssh_icmp
        - postgres
    environment: "{{ openstack_environment }}"
    register: database_server

  - name: create web servers
    os_server:
      name: "{{ item }}-{{ target }}"
      key_name: demo
      image: rhel-7.3-53-minimal
      flavor: m1.small
      boot_from_volume: yes
      terminate_volume: yes
      volume_size: 10
      floating_ip_pools: external-net
      delete_fip: yes
      network: web
      security_groups:
        - ssh_icmp
        - rails
    environment: "{{ openstack_environment }}"
    with_items:
      - railsapp-1
      - railsapp-2
    register: web_servers

  - add_host:
      name: "{{ item.server.accessIPv4 }}"
      groups: web-servers
    with_items:
       - "{{ web_servers.results }}"

  - add_host:
      name: "{{ database_server.server.accessIPv4 }}"
      groups: database-server

  - name: wait for systems to become available
    wait_for: port=22 state=started host={{ item }}
    with_items:
      - "{{ groups['database-server'] }}"
      - "{{ groups['web-servers'] }}"
...
